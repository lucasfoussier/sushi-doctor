name: Jobs
on:
  push:
    branches: [main, preprod, dev]
defaults:
  run:
    working-directory: ./app
jobs:
  lint-front:
    name: 'React Eslint'
    runs-on: Ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Eslint
      run: yarn install && yarn lint
  lint-back:
    name: 'PHP Tests'
    runs-on: Ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Eslint
      run: yarn install && yarn lint
  deploy-production:
    needs: [lint-front, lint-back]
    name: 'Production Deployment to AWS'
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    environment: production
    env:
      APP_NAME: 'sushi-doctor'
      APP_DEBUG: ${{ secrets.APP_DEBUG }}
      AWS_KEY: ${{ secrets.AWS_KEY }}
      JWT_KEYS_DIRECTORY: ${{ secrets.JWT_KEYS_DIRECTORY }}
      AWS_SECRET: ${{ secrets.AWS_SECRET }}
      AWS_DEPLOYMENT_REGION: ${{ secrets.AWS_DEPLOYMENT_REGION }}
      AWS_DYNAMO_DB_ENDPOINT: ${{ secrets.AWS_DYNAMO_DB_ENDPOINT }}
      AWS_WARMUP_RATE: ${{ secrets.AWS_WARMUP_RATE }}
      APP_SECRET: ${{ secrets.APP_SECRET }}
      APP_ENV: ${{ secrets.APP_ENV }}
      APP_DOMAIN: ${{ secrets.APP_DOMAIN }}
      APP_DOMAIN_CERTIFICATE: ${{ secrets.APP_DOMAIN_CERTIFICATE }}
      APP_STAGE: ${{ secrets.APP_STAGE }}
      AWS_QUEUE_ID: ${{ secrets.AWS_QUEUE_ID }}
      AWS_HOSTED_ZONE_ID: ${{ secrets.AWS_HOSTED_ZONE_ID }}
      APP_WS_DOMAIN_CERTIFICATE: ${{ secrets.APP_WS_DOMAIN_CERTIFICATE }}
    runs-on: Ubuntu-20.04
    steps:
    - uses: actions/checkout@v2.3.4
    - name: Validation of Composer configuration
      run: composer validate
    - name: Building Front with Webpack Encore
      run: yarn install && yarn build
    - name: Installing Composer production dependencies
      run: composer install --no-dev --optimize-autoloader --prefer-dist --no-progress --no-interaction --no-scripts
    - name: Warming up Symfony cache
      run: php bin/console cache:clear --no-debug --no-warmup --env=${APP_ENV} && php bin/console cache:warmup --env=${APP_ENV}
    - name: Generating JWT certificates
      run: php bin/console lexik:jwt:generate-keypair --no-interaction --env=${APP_ENV} --quiet --overwrite
    - name: Configuring Serverless CLI
      run: sudo npm install -g serverless && serverless config credentials --provider aws --key ${AWS_KEY} --secret ${AWS_SECRET} --stage ${APP_STAGE}
    - name: Deploying Web Lambda and CLI Lambda
      run: serverless deploy --stage ${APP_STAGE} --conceal
    - name: Updating DynamoDB
      run: AWS_DEFAULT_REGION=${AWS_DEPLOYMENT_REGION} AWS_ACCESS_KEY_ID=${AWS_KEY} AWS_SECRET_ACCESS_KEY=${AWS_SECRET} vendor/bin/bref cli sushi-doctor-${APP_STAGE}-console -- app:update-dynamo-db
    - name: Uploading Assets
      uses: jakejarvis/s3-sync-action@v0.5.1
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: sushi-doctor-asset-${APP_STAGE}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET }}
        AWS_REGION: ${{ secrets.AWS_DEPLOYMENT_REGION }}
        SOURCE_DIR: 'app/public/assets' # the default workdir is overridden, we need to manually add app/
        DEST_DIR: 'assets'
    - name: Uploading React Build
      uses: jakejarvis/s3-sync-action@v0.5.1
      with:
        args: --acl public-read --follow-symlinks --delete
      env:
        AWS_S3_BUCKET: sushi-doctor-front-${APP_STAGE}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET }}
        AWS_REGION: ${{ secrets.AWS_DEPLOYMENT_REGION }}
        SOURCE_DIR: 'app/public/build' # the default workdir is overridden, we need to manually add app/
        DEST_DIR: 'build'
    - name: Updating robots.txt, favicon.ico
      uses: jakejarvis/s3-sync-action@v0.5.1
      with:
        args: --acl public-read --follow-symlinks
      env:
        AWS_S3_BUCKET: sushi-doctor-asset-${APP_STAGE}
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET }}
        AWS_REGION: ${{ secrets.AWS_DEPLOYMENT_REGION }}
        SOURCE_DIR: 'app/public/base' # the default workdir is overridden, we need to manually add app/
        DEST_DIR: ''
